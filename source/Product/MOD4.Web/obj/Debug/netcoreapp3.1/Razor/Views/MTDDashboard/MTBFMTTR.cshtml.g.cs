#pragma checksum "D:\Repostories\MOD4_Backend\MOD4\source\Product\MOD4.Web\Views\MTDDashboard\MTBFMTTR.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "7d8468673d2e66d6d9c60c27b0c439bd9f0f7d03"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_MTDDashboard_MTBFMTTR), @"mvc.1.0.view", @"/Views/MTDDashboard/MTBFMTTR.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\Repostories\MOD4_Backend\MOD4\source\Product\MOD4.Web\Views\_ViewImports.cshtml"
using MOD4.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Repostories\MOD4_Backend\MOD4\source\Product\MOD4.Web\Views\_ViewImports.cshtml"
using MOD4.Web.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"7d8468673d2e66d6d9c60c27b0c439bd9f0f7d03", @"/Views/MTDDashboard/MTBFMTTR.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"6d1efcd6897d9e05e93e9d2e8d3f27b282c15526", @"/Views/_ViewImports.cshtml")]
    public class Views_MTDDashboard_MTBFMTTR : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<MOD4.Web.ViewModel.MTBFMTTRDashboardViewModel>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "0", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "2", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "3", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/echarts/echarts.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 3 "D:\Repostories\MOD4_Backend\MOD4\source\Product\MOD4.Web\Views\MTDDashboard\MTBFMTTR.cshtml"
  
    ViewBag.Title = "MTBF/MTTR";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"<style>

    h2 {
        font-family: ""Microsoft JhengHei"";
        font-weight: 900;
        font-style: italic;
    }

    .my-control {
        display: initial;
        width: 70%;
        height: calc(2.25rem + 2px);
        padding: 0.375rem 0.75rem;
        font-size: 1rem;
        font-weight: 400;
        line-height: 1.5;
        color: #495057;
        background-color: #fff;
        background-clip: padding-box;
        border: 1px solid #ced4da;
        border-radius: 0.25rem;
        box-shadow: inset 0 0 0 transparent;
        transition: border-color .15s ease-in-out,box-shadow .15s ease-in-out;
    }
</style>

<div class=""content-wrapper"">
    <section class=""content"">
        <div class=""container-fluid"">
            <div class=""row"">
                <div class=""col-12"">
                    <div class=""card"">
                        <div class=""card-header"">
                            <h3 class=""card-title"">MTBF / MTTR</h3>
                        </div>
");
            WriteLiteral("                        <div class=\"card-body\">\r\n                            <button class=\"btn btn-sm\" type=\"button\" name=\"btn30\"");
            BeginWriteAttribute("value", " value=\"", 1251, "\"", 1259, 0);
            EndWriteAttribute();
            WriteLiteral(" style=\"margin-bottom:3px;\" onclick=\"btnClickSetting()\">\r\n");
            WriteLiteral("                                <i class=\"fa fa-wrench\"> Target 設定</i>\r\n                            </button>\r\n");
            WriteLiteral(@"                            <fieldset id=""searchArea"">
                                <legend id=""legend"">查詢區塊</legend>
                                <span style=""color: #b00202; font-size: 5px "">*查詢選項必選</span>
                                <div class=""form-group d-flex align-content-center flex-wrap"">
                                    <div class=""col-lg-1"">
                                        <label class=""col-form-label"">From：</label>
                                    </div>
                                    <div class=""col-lg-2"">
                                        <input id=""datePickFrom"" class=""my-control"" type=""date"" min=""2020/01/01"" />
                                    </div>
                                    <div class=""col-lg-1"">
                                        <label class=""col-form-label"">To：</label>
                                    </div>
                                    <div class=""col-lg-2"">
                                        <input id=""dat");
            WriteLiteral(@"ePickTo"" class=""my-control"" type=""date"" min=""2020/01/01"" />
                                    </div>
                                    <div class=""col-lg-1"">
                                        <label class=""col-form-label"">樓層</label>
                                    </div>
                                    <div class=""col-lg-1"">
                                        <select class=""form-control select2bs4"" id=""Floor"">
                                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7d8468673d2e66d6d9c60c27b0c439bd9f0f7d037983", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7d8468673d2e66d6d9c60c27b0c439bd9f0f7d039145", async() => {
                WriteLiteral("2");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7d8468673d2e66d6d9c60c27b0c439bd9f0f7d0310343", async() => {
                WriteLiteral("3");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                                        </select>
                                    </div>
                                    <div class=""col-lg-1"">
                                        <label class=""col-form-label"">站點</label>
                                    </div>
                                    <div class=""col-lg-1"">
                                        <select class=""form-control select2bs4"" id=""Node"">
                                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7d8468673d2e66d6d9c60c27b0c439bd9f0f7d0311984", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                                        </select>
                                    </div>
                                </div>
                                <div class=""form-group d-flex align-content-center flex-wrap"">
                                    <div class=""col-lg-1"">
                                        <label class=""col-form-label"">機台</label>
                                    </div>
                                    <div class=""col-lg-2"">
                                        <select class=""form-control select2bs4"" id=""ToolId"">
                                        </select>
                                    </div>
                                    <div class=""col-lg-1"">
                                        <input class=""btn btn-info"" type=""button"" style=""float:right"" name=""btn29"" value=""查詢"" onclick=""btnClickSearch()"" />
                                    </div>
                                </div>
                            </fieldset>
              ");
            WriteLiteral(@"              <div>
                                <h3 id=""EqTitle""></h3>
                                <table id=""infoTable"" class=""table table-bordered table-striped table-hover"" hidden style=""width:50%"">
                                    <tbody>
                                        <tr>
                                            <td>MTBF 目標</td>
                                            <td id=""mtbfTarget""></td>
                                            <td>MTBF 實際</td>
                                            <td id=""mtbfActual""></td>
                                        </tr>
                                        <tr>
                                            <td>MTTR 目標</td>
                                            <td id=""mttrTarget""></td>
                                            <td>MTTR 實際</td>
                                            <td id=""mttrActual""></td>
                                        </tr>
                                    </tbody>
  ");
            WriteLiteral(@"                              </table>
                                <div id=""barChart1"" style=""margin-bottom:5px""></div>
                                <br />
                                <table id=""eqTable"" hidden class=""table table-bordered table-hover"">
                                    <thead>
                                        <tr>
                                            <th>");
#nullable restore
#line 119 "D:\Repostories\MOD4_Backend\MOD4\source\Product\MOD4.Web\Views\MTDDashboard\MTBFMTTR.cshtml"
                                           Write(Html.DisplayNameFor(model => model.EqpInfoDetail.First().Operator));

#line default
#line hidden
#nullable disable
            WriteLiteral("</th>\r\n                                            <th>");
#nullable restore
#line 120 "D:\Repostories\MOD4_Backend\MOD4\source\Product\MOD4.Web\Views\MTDDashboard\MTBFMTTR.cshtml"
                                           Write(Html.DisplayNameFor(model => model.EqpInfoDetail.First().Code));

#line default
#line hidden
#nullable disable
            WriteLiteral("</th>\r\n                                            <th>");
#nullable restore
#line 121 "D:\Repostories\MOD4_Backend\MOD4\source\Product\MOD4.Web\Views\MTDDashboard\MTBFMTTR.cshtml"
                                           Write(Html.DisplayNameFor(model => model.EqpInfoDetail.First().CodeDesc));

#line default
#line hidden
#nullable disable
            WriteLiteral("</th>\r\n                                            <th>");
#nullable restore
#line 122 "D:\Repostories\MOD4_Backend\MOD4\source\Product\MOD4.Web\Views\MTDDashboard\MTBFMTTR.cshtml"
                                           Write(Html.DisplayNameFor(model => model.EqpInfoDetail.First().Comments));

#line default
#line hidden
#nullable disable
            WriteLiteral("</th>\r\n                                            <th>");
#nullable restore
#line 123 "D:\Repostories\MOD4_Backend\MOD4\source\Product\MOD4.Web\Views\MTDDashboard\MTBFMTTR.cshtml"
                                           Write(Html.DisplayNameFor(model => model.EqpInfoDetail.First().StartTime));

#line default
#line hidden
#nullable disable
            WriteLiteral("</th>\r\n                                            <th>");
#nullable restore
#line 124 "D:\Repostories\MOD4_Backend\MOD4\source\Product\MOD4.Web\Views\MTDDashboard\MTBFMTTR.cshtml"
                                           Write(Html.DisplayNameFor(model => model.EqpInfoDetail.First().RepairTime));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"</th>
                                        </tr>
                                    </thead>
                                    <tbody id=""eqtbody"">
                                    </tbody>
                                </table>
                            </div>
                        </div>
                        <!-- /.card-body -->
                    </div>
                </div>
                <!-- /.col -->
            </div>
            <!-- /.row -->
        </div>
        <!-- /.container-fluid -->
    </section>
    <!-- /.content -->
</div>


");
            DefineSection("scripts", async() => {
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7d8468673d2e66d6d9c60c27b0c439bd9f0f7d0318393", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
    <script type=""text/javascript"">

        var _eqIpMapping = [];
        var _filterOptions = [];

        let myfuc = {
            Search() {

                if (($(""#datePickFrom"").val() == """" || $(""#datePickFrom"").val() == null) ||
                    ($(""#datePickTo"").val() == """" || $(""#datePickTo"").val() == null) ||
                    ($(""#ToolId"").val() == """" || $(""#ToolId"").val() == null)) {
                    alert('日期區間、機台EQ必選');
                    return false;
                }

                globalFuc.LoadingPic();

                $.ajax({
                    url: ""./MTBFMTTR/Search?beginDate="" + $('#datePickFrom').val() + ""&endDate="" + $('#datePickTo').val() + ""&equipment="" + $('#ToolId').val() + ""&floor="" + $('#Floor').val(),
                    type: ""GET"",
                    datatype: ""json"",
                    success: function (result) {
                        $.unblockUI();
                        $('#EqTitle').html('');
                        $('#eq");
                WriteLiteral(@"tbody').empty();
                        $('#eqTable').attr('hidden', true);
                        $('#barChart1').empty();
                        $('#barChart1').removeAttr(""style"", false);
                        $('#barChart1').removeAttr(""_echarts_instance_"", false);
                        if (result.isSuccess) {
                            $('#EqTitle').html($('#ToolId').val());
                            $('#infoTable').removeAttr('hidden', false);
                            $('#mtbfTarget').html(result.data.mtbfTarget);
                            $('#mtbfActual').html(result.data.mtbfActual);
                            $('#mttrTarget').html(result.data.mttrTarget);
                            $('#mttrActual').html(result.data.mttrActual);
                            myfuc.SetChart(result.data);
                            $('#eqTable').removeAttr('hidden', false);
                            $.each(result.data.eqpInfoDetail, function (index, eq) {
                                ");
                WriteLiteral(@"$('#eqtbody').append('<tr><td>' + eq.operator + '</td><td>' + eq.code + '</td><td>' + eq.codeDesc + '</td><td>' + eq.comments + '</td><td>' + eq.startTime + '</td><td>' + eq.repairTime + '</td></tr>');
                            });
                        }
                        else {
                            $('#infoTable').attr('hidden', true);
                            alert(result.msg);
                        }
                    }
                });
            },
            SetChart(data) {
                $(""#barChart1"").css(""min-height"", ""400px"");
                $(""#barChart1"").css(""max-width"", ""90%"");
                $(""#barChart1"").css(""background-color"", ""#7a8591"");
                var chartDom1 = document.getElementById('barChart1');
                var dtxEchar1 = echarts.init(chartDom1);
                var _xAxisCode = [];
                var _avgTime = [];
                var _target = [];
                var _mttrTarget = data.mttrTarget;

                $");
                WriteLiteral(@".each(data.mttrDetail, function (index, item) {
                    _xAxisCode.push(item.downCode);
                    _avgTime.push(item.avgTime);
                    _target.push(_mttrTarget);
                });

                var dtxOption1 = {
                    title: {
                        text: 'MTTR',
                        textStyle: {
                            color: ""black"",
                            fontWeight: 600,
                            fontSize: 25,
                            textAlign: 'center'
                        }
                    },
                    tooltip: {},
                    legend: {
                        right: '0%',
                        icon: 'circle',
                        data: ['Target'],
                        textStyle: { color: ""black"" }
                    },
                    xAxis: {
                        data: _xAxisCode,
                        axisLabel: { color: ""black"" }
                    },
      ");
                WriteLiteral(@"              yAxis: {
                        name: """",
                        nameTextStyle: {
                            color: ""black""
                        },
                        axisLabel: {
                            color: ""black""
                        }
                    },
                    series: [
                        {
                            name: 'Target',
                            type: 'line',
                            data: _target,
                            //itemStyle: {
                            //    normal: {
                            //        color: '#c90e27',
                            //        lineStyle: {
                            //            width: 3,
                            //            type: 'dotted', //'dotted'虚线 'solid'实线
                            //            color: '#c90e27'
                            //        }
                            //    }
                            //},
                       ");
                WriteLiteral(@"     lineStyle: {
                                width: 2,
                                color: '#0236a3'
                            }
                        },
                        {
                            name: 'avgTime',
                            type: 'bar',
                            data: _avgTime,
                            barWidth: 30,
                            itemStyle:
                            {
                                color: function (data) {
                                    if (data.value < _mttrTarget) {
                                        return '#01661c';
                                    }
                                    else {
                                        return '#b50b0b';
                                    }
                                }
                            }
                        }
                    ]
                };

                dtxEchar1.setOption(dtxOption1);

                window");
                WriteLiteral(".addEventListener(\'resize\', function () {\r\n                    dtxEchar1.resize();\r\n                });\r\n            }\r\n        }\r\n\r\n        $(function () {\r\n            _eqIpMapping = ");
#nullable restore
#line 292 "D:\Repostories\MOD4_Backend\MOD4\source\Product\MOD4.Web\Views\MTDDashboard\MTBFMTTR.cshtml"
                      Write(Json.Serialize(@ViewBag.EqIDMappingOption));

#line default
#line hidden
#nullable disable
                WriteLiteral(@";
            //myfuc.SetChart();

            //_eqIpMapping.reduce(function (item, option) {
            //    if (item[option['operation']] == null) {
            //        $(""<option></option>"").attr(""value"", option['operation']).text(option['operation']).appendTo($('#Node'));
            //    }
            //    (item[option['operation']] = item[option['operation']] || []).push(option);
            //    return item;
            //}, {});
        });

        $(""#Floor"").change(function (e) {

            let _eqFloorSelected = $(""#Floor"").find("":selected"").val();
            $(""#Node"").empty();
            $(""#ToolId"").empty();

            $(""<option></option>"").appendTo($('#Node'));
            _filterOptions = _eqIpMapping.filter(function (eqMapping) {
                return eqMapping.floor == _eqFloorSelected;
            });

            _filterOptions.reduce(function (item, option) {
                return optionReduce(item, option, 'operation', 'operation', '#Node');
   ");
                WriteLiteral(@"         }, {});
        });

        $(""#Node"").change(function (e) {

            let _eqGroupSelected = $(""#Node"").find("":selected"").val();
            let _eqFloorSelected = $(""#Floor"").find("":selected"").val();
            $(""#ToolId"").empty();

            $(""<option></option>"").appendTo($('#ToolId'));
            _filterOptions = _eqIpMapping.filter(function (eqMapping) {
                return eqMapping.floor == _eqFloorSelected && eqMapping.operation == _eqGroupSelected;
            });

            _filterOptions.reduce(function (item, option) {
                return optionReduce(item, option, 'equiP_NBR', 'equiP_NBR', '#ToolId');
            }, {});
        });

        function optionReduce(item, option, propId, propName, optionId) {
            if (item[option[propId]] == null) {
                $(""<option></option>"").attr(""value"", option[propId]).text(option[propName]).appendTo($(optionId));
            }
            (item[option[propId]] = item[option[propId]] || []).push");
                WriteLiteral("(option);\r\n            return item;\r\n        }\r\n\r\n        function btnClickSearch() {\r\n            myfuc.Search();\r\n        }\r\n\r\n        function btnClickSetting() {\r\n            location.href = \"./MTBFMTTR/Setting\";\r\n        }\r\n    </script>\r\n");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<MOD4.Web.ViewModel.MTBFMTTRDashboardViewModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
